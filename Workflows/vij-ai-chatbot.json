{
  "name": "vij-ai-chatbot",
  "nodes": [
    {
      "parameters": {
        "multipleMethods": true,
        "httpMethod": [
          "POST",
          "GET"
        ],
        "path": "aichatbot",
        "responseMode": "responseNode",
        "options": {
          "allowedOrigins": [
            "*"
          ]
        }
      },
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -1120,
        -48
      ],
      "id": "2355e96d-1bdf-4d30-9362-16dcc516742c",
      "webhookId": "cb9661cf-6b03-4286-904e-7bdb94dcc35a"
    },
    {
      "parameters": {
        "options": {}
      },
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -176,
        -64
      ],
      "id": "3590af05-d02e-4e2f-894c-0dea1b899c84"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a professional and knowledgeable AI chatbot assistant designed to help users with questions about the portfolio of software developer who software development, portfolio presentation, .NET Core, Azure, DevOps, and AI automation.\n\n---\n\nðŸ§  <b>CONTEXT USAGE</b>:\n- Use the document context retrieved from Pinecone vector database.\n- The context contains candidate documents like resumes, cover letters, and bios.\n- Extract relevant content **only from matched context**, especially when asked for specific data like skills, experiences, education, or contact details.\n\n---\n\nðŸŽ¯ <b>OBJECTIVE</b>:\n- Accurately answer user questions based on the candidate's documents.\n- If the answer is not present in the context, politely say it's unavailable.\n- Listen to the user's questions.\n- Respond accurately using only the given profile details.\n- Respond with email, LinkedIn URL or mobile no when asked for contact details.\n- If you don't know something, ask a clarifying question or admit you don't have that information.\n\nCONTENT GUIDELINES:\n- Begin responses with a brief helpful summary.\n- Use bullet points as unordered `<ul><li>` HTML lists for skills, projects, or steps.\n- Break content into small sections with `<p>` tags to ensure clean spacing.\n- Limit each reply to **no more than three short paragraphs**.\n- Always maintain a professional and recruiterâ€‘friendly tone.\n- Avoid speculation or personal opinions beyond the scope of provided details.\n\nUSER INPUT HANDLING:\n- Expect JSON input containing:\n  {\n    \"sessionId\": \"{{ $json.body.sessionId }}\",\n    \"message\": \"{{ $json.body.message }}\"\n  }\n- Use the `sessionId` only for internal context (do not echo it back).\n\nOUTPUT FORMAT (JSON with HTML):\n{\n  \"reply\": \"<p>Helpful intro line.</p><ul><li>Bullet point 1</li><li>Bullet point 2</li></ul><p>Final paragraph or follow-up question.</p>\"\n}\n\nEXAMPLES:\n\nUser: \"Tell me about your Real Estate Lead Manager project.\"\nBot:\n```json\n{\n  \"reply\": \"<p>Here's a brief overview of the Real Estate Lead Manager:</p><ul><li>Automated lead intake and email workflows using n8n and Airtable.</li><li>AIâ€‘driven lead routing to increase conversion efficiency.</li><li>Technologies used: .NET Core, Azure App Service, n8n.</li></ul><p>Would you like to explore the AI integration or deployment steps next?</p>\"\n}\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        -784,
        -64
      ],
      "id": "70cc6e2f-5b45-4dfc-90d0-a8da5c43a734",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -784,
        96
      ],
      "id": "7af8f069-0e11-4b6d-be80-fd6264d68766",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "s7tAd2pMmhzCuuJp",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.body.sessionId }}",
        "contextWindowLength": 15
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -656,
        112
      ],
      "id": "f65bdaaf-9a1a-4458-8dd1-8458f43138f9",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "jsCode": "// Function Item Node\nreturn items.map(item => {\n  let raw = item.json.output || item.json.reply || '';\n  let text = raw.trim();\n  // Strip code fences\n  if (text.startsWith('```')) {\n    text = text.replace(/^```(?:json)?\\s*/, '').replace(/```$/, '').trim();\n  }\n  let parsed;\n  try {\n    parsed = JSON.parse(text);\n  } catch (e) {\n    parsed = { reply: text };\n  }\n  return { json: parsed };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -432,
        -64
      ],
      "id": "672de71d-fe6d-48fa-9ea8-baab32c29603",
      "name": "Code"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "work with pinacone vectore store",
        "pineconeIndex": {
          "__rl": true,
          "value": "portfolio",
          "mode": "list",
          "cachedResultName": "portfolio"
        },
        "topK": 5,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.3,
      "position": [
        -560,
        144
      ],
      "id": "5ad1b864-aa7e-425c-a70d-81b744065752",
      "name": "Pinecone Vector Store",
      "credentials": {
        "pineconeApi": {
          "id": "HQ5P7xFqBPGSAIkY",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
      "typeVersion": 1,
      "position": [
        -480,
        352
      ],
      "id": "f28195ba-2b23-4581-b255-bc92aa7fb854",
      "name": "Embeddings Google Gemini",
      "credentials": {
        "googlePalmApi": {
          "id": "s7tAd2pMmhzCuuJp",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "app73zfQL6H3IBD7g",
          "mode": "list",
          "cachedResultName": "beginner course",
          "cachedResultUrl": "https://airtable.com/app73zfQL6H3IBD7g"
        },
        "table": {
          "__rl": true,
          "value": "tblbmvkFMMUqX0U0R",
          "mode": "list",
          "cachedResultName": "Vijay - AI Assitant Data",
          "cachedResultUrl": "https://airtable.com/app73zfQL6H3IBD7g/tblbmvkFMMUqX0U0R"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "User Input": "={{ $('Webhook').item.json.body.message }}",
            "AI Replay": "={{ $json.reply }}",
            "SessionID": "={{ $('Webhook').item.json.body.sessionId }}",
            "Date Time": "={{ new Date().toISOString() }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "User Input",
              "displayName": "User Input",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "AI Replay",
              "displayName": "AI Replay",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "SessionID",
              "displayName": "SessionID",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Date Time",
              "displayName": "Date Time",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        32,
        -64
      ],
      "id": "3f0365c2-fc7c-47a3-ac27-de1b4ae9a7bb",
      "name": "Create a record",
      "credentials": {
        "airtableTokenApi": {
          "id": "RYYodYTcsxtZ51A0",
          "name": "Airtable Personal Access Token account"
        }
      }
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "body": {
            "message": "Ok",
            "sessionId": "15792b56-c7f7-46cb-a27a-683e9dad7fb5"
          }
        }
      }
    ]
  },
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Google Gemini": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook": {
      "main": [
        [
          {
            "node": "Create a record",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": -1,
    "errorWorkflow": "OWo9I0ejwZzUtJuI"
  },
  "versionId": "e89b7bfe-d445-4748-87b9-be83164c40bc",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "8e9f0a38732597e204f5ee89769041e1f01f4a168c46ba0fe6bd996fd6655f8d"
  },
  "id": "Z2a9ZplrRloJoEEr",
  "tags": []
}